{"name": "test_guest_can_add_product_to_basket[offer7]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: basket prod name is Coders at Work book but choosing Coders at Work", "trace": "self = <module_5.test_product_page.TestProductPage object at 0x0449ACD0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bf8e906f758e8c39a67fd7c6e2b3883c\")>\npromo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\",\n                              pytest.param(\"offer7\", marks=pytest.mark.xfail),\n                              \"offer8\",\n                              \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        link = \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=\" + promo_offer\n        page = ProductPage(browser, link)\n        page.Open()\n    \n        page.get_class_properties()\n    \n        page.should_be_product_page()\n    \n        page.add_to_basket()\n    \n        solve_quiz_and_get_code(self, browser)\n    \n        page.read_price_in_basket()\n    \n>       page.read_add_basket_alert()\n\ntest_product_page.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <module_5.pages.product_page.ProductPage object at 0x04485C10>\n\n    def read_add_basket_alert(self):\n        alert_prod_name = self.browser.find_element(*AlertProductPageLocators.ALERT_BASKET_PRODUCT_NAME).text\n    \n>       assert alert_prod_name == self.product_name, f'basket prod name is {alert_prod_name}' \\\n                                                     f' but choosing {self.product_name}'\nE       AssertionError: basket prod name is Coders at Work book but choosing Coders at Work\n\npages\\product_page.py:57: AssertionError"}, "attachments": [{"name": "stdout", "source": "cc1bd1fc-39fd-4a80-a9b6-cdddf68ee11d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "promo_offer", "value": "'offer7'"}], "start": 1616075838461, "stop": 1616075842549, "uuid": "e2091db2-66e4-4aa0-8726-f74d7a358788", "historyId": "87c815e2ff57b386ed8170cc72071f13", "testCaseId": "f8eff88bc5381217a60409d7a8069ee9", "fullName": "test_product_page.TestProductPage#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "suite", "value": "test_product_page"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "S0151"}, {"name": "thread", "value": "8244-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_product_page"}]}